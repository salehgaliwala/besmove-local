/*! Thrive Quiz Builder - 2018-01-24
* http://www.thrivethemes.com/
* Copyright (c) 2018 Thrive Themes */

!function(a){"use strict";var b,c,d,e,f,g={".js":[],".json":[],".css":[],".html":[]},h="function"==typeof require?require:null;return e=function(a){var b=new Error("Could not find module '"+a+"'");return b.code="MODULE_NOT_FOUND",b},f=function(a,b,c){var d,e;if("function"==typeof a[b+c])return b+c;for(d=0;e=g[c][d];++d)if("function"==typeof a[b+e])return b+e;return null},b=function(a,d,g,h,i,j){var k,l,m,n,o,p;for(g=g.split("/"),k=g.pop(),"."!==k&&".."!==k||(g.push(k),k="");null!=(l=g.shift());)if(l&&"."!==l&&(".."===l?(a=d.pop(),j=j.slice(0,j.lastIndexOf("/"))):(d.push(a),a=a[l],j+="/"+l),!a))throw e(h);if(k&&"function"!=typeof a[k]&&(p=f(a,k,".js"),p||(p=f(a,k,".json")),p||(p=f(a,k,".css")),p||(p=f(a,k,".html")),p?k=p:2!==i&&"object"==typeof a[k]&&(d.push(a),a=a[k],j+="/"+k,k="")),!k)return 1!==i&&a[":mainpath:"]?b(a,d,a[":mainpath:"],h,1,j):b(a,d,"index",h,2,j);if(!(o=a[k]))throw e(h);return o.hasOwnProperty("module")?o.module.exports:(m={},o.module=n={exports:m,id:j+"/"+k},o.call(m,m,n,c(a,d,j)),n.exports)},d=function(c,d,f,g){var i,j=f,k=f.charAt(0),l=0;if("/"===k){if(j=j.slice(1),!(c=a["/"])){if(h)return h(f);throw e(f)}g="/",d=[]}else if("."!==k){if(i=j.split("/",1)[0],!(c=a[i])){if(h)return h(f);throw e(f)}g=i,d=[],j=j.slice(i.length+1),j||(j=c[":mainpath:"],j?l=1:(j="index",l=2))}return b(c,d,j,f,l,g)},(c=function(a,b,c){return function(e){return d(a,[].concat(b),e,c)}})(a,[],"")}({workspace:{"tcb-bridge":{assets:{js:{internal:{"_utils.js":function(exports,module,require){eval("/**\n * Created by Ovidiu on 6/27/2017.\n */\n(function ( $ ) {\n\tmodule.exports = {\n\n\t\t/**\n\t\t * Show / Hide Dynamic Content Element\n\t\t */\n\t\tshow_hide_dynamic_content_element: function () {\n\t\t\tvar $element = jQuery( '.tve-element[data-elem=\"tqb_dynamic_content\"]' );\n\n\t\t\tif ( TVE.inner_$( '.tqb-dynamic-content-container' ).length > 0 ) {\n\t\t\t\t$element.addClass( 'tve-hide' );\n\t\t\t} else {\n\t\t\t\t$element.removeClass( 'tve-hide' );\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Show / Hide Social Share Badge Element\n\t\t */\n\t\tshow_hide_social_share_badge_element: function () {\n\t\t\tvar $element = jQuery( '.tve-element[data-elem=\"tqb_social_share_badge\"]' );\n\n\t\t\tif ( TVE.inner_$( '.tqb-social-share-badge-container' ).length > 0 ) {\n\t\t\t\t$element.addClass( 'tve-hide' );\n\t\t\t} else {\n\t\t\t\t$element.removeClass( 'tve-hide' );\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Checks if a string is an integer number\n\t\t *\n\t\t * @param value\n\t\t * @returns {boolean|*}\n\t\t */\n\t\tis_integer_number: function ( value ) {\n\t\t\treturn Math.floor( value ) == value && $.isNumeric( value );\n\t\t},\n\n\t\t/**\n\t\t * actions related to a state\n\t\t * @param data\n\t\t * @param ajax_param\n\t\t * @returns {*}\n\t\t */\n\t\tstate_ajax: function ( data, ajax_param ) {\n\t\t\tvar params = {\n\t\t\t\ttype: 'post',\n\t\t\t\tdataType: 'json',\n\t\t\t\turl: tqb_page_data.ajaxurl\n\t\t\t};\n\n\t\t\tdata.action = tqb_page_data.state_action;\n\t\t\tdata.variation_id = data.variation_id || tqb_page_data.variation_id;\n\t\t\tdata.page_id = tqb_page_data.page_id;\n\t\t\tdata.security = tqb_page_data.security;\n\t\t\tdata.tqb_key = true;  // This flag set to true for the tqb-class-hooks.php to be included\n\t\t\tparams.data = data;\n\n\t\t\tif ( ajax_param ) {\n\t\t\t\tfor ( var k in ajax_param ) {\n\t\t\t\t\tparams[k] = ajax_param[k];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn jQuery.ajax( params, data );\n\t\t},\n\n\t\ttpl_ajax: function ( data, ajax_param, no_loader ) {\n\t\t\tvar params = {\n\t\t\t\ttype: 'post',\n\t\t\t\tdataType: 'json',\n\t\t\t\turl: tqb_page_data.ajaxurl\n\t\t\t};\n\t\t\tif ( typeof no_loader === 'undefined' || ! no_loader ) {\n\t\t\t\tTVE.main.overlay();\n\t\t\t}\n\t\t\tdata.action = tqb_page_data.tpl_action;\n\t\t\tdata.variation_id = data.variation_id || tqb_page_data.variation_id;\n\t\t\tdata.page_id = tqb_page_data.page_id;\n\t\t\tdata.security = tqb_page_data.security;\n\t\t\tdata.tqb_key = true;  // This flag set to true for the tqb-class-hooks.php to be included\n\t\t\tparams.data = data;\n\n\t\t\tif ( ajax_param ) {\n\t\t\t\tfor ( var k in ajax_param ) {\n\t\t\t\t\tparams[k] = ajax_param[k];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn jQuery.ajax( params, data );\n\t\t},\n\n\t\t/**\n\t\t * Insert the response that comes from the states\n\t\t *\n\t\t * @param response\n\t\t */\n\t\tinsertStateResponse: function ( response ) {\n\t\t\tTVE.inner_$( '.tqb-dynamic-content-container' ).attr( 'tqb-saved', 'true' );\n\n\t\t\t/**\n\t\t\t * javascript page data\n\t\t\t */\n\t\t\ttqb_page_data = jQuery.extend( tqb_page_data, response.tqb_page_data, true );\n\n\t\t\t/**\n\t\t\t State bar is only for the result page\n\t\t\t */\n\t\t\tif ( response.state_bar ) {\n\t\t\t\tjQuery( '#tqb-form-states' ).html( response.state_bar );\n\t\t\t}\n\n\t\t\t/*Popover trigger*/\n\t\t\tthis.popover();\n\n\t\t\t/*Hover trigger*/\n//\t\t\tTQB_Editor.hover_numeric_range_preview();\n\t\t\tthis.hover_numeric_range_preview();\n\n//\t\t\tTVE_Editor_Page.overlay( 'close' );\n\t\t},\n\n\t\tinsertResponse: function ( response ) {\n\t\t\tvar self = this;\n\t\t\t/** custom CSS */\n\t\t\tTVE.inner_$( '.tve_custom_style,.tve_user_custom_style' ).remove();\n\t\t\tTVE.CSS_Rule_Cache.clear();\n\t\t\tTVE.inner_$( 'head' ).append( response.custom_css );\n\n\t\t\t/**\n\t\t\t * checks if all the added CSS <link> elements are available (finished loading and applied)\n\t\t\t *\n\t\t\t * @param {jQuery} $jq_links collection of added <link> nodes\n\t\t\t * @param {Function} complete_callback\n\t\t\t */\n\t\t\tfunction check_loaded( $jq_links, complete_callback ) {\n\t\t\t\tvar all_loaded = true;\n\t\t\t\twindow.tqb_loaded_count = window.tqb_loaded_count || 1;\n\t\t\t\twindow.tqb_loaded_count ++;\n\t\t\t\t$jq_links.each( function () {\n\n\t\t\t\t\t/** firefox throws an Error when testing this condition and the css is not loaded yet */\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif ( ! this[sheet] || ! this[sheet][cssRules] || ! this[sheet][cssRules].length ) {\n\t\t\t\t\t\t\tall_loaded = false;\n\t\t\t\t\t\t\treturn false; // break the loop\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\tall_loaded = false;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tif ( all_loaded || window.tqb_loaded_count > 40 ) {\n\t\t\t\t\tcomplete_callback();\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout( function () {\n\t\t\t\t\t\tcheck_loaded( $jq_links, complete_callback );\n\t\t\t\t\t}, 500 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * callback to be applied when all css files are loaded and available\n\t\t\t */\n\t\t\tfunction on_resources_loaded() {\n\t\t\t\t/**\n\t\t\t\t * javascript page data\n\t\t\t\t */\n\t\t\t\ttqb_page_data = jQuery.extend( tqb_page_data, response.tqb_page_data, true );\n\n\n\t\t\t\tTVE.inner_$( '#tqb-editor-replace' ).replaceWith( response.main_page_content );\n\t\t\t\tjQuery( '#tqb-form-states' ).empty();\n\n\t\t\t\tTVE.Editor_Page.initEditorActions();\n\n\t\t\t\tself.show_hide_dynamic_content_element();\n\t\t\t\tself.show_hide_social_share_badge_element();\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * browser-compliant way of accessing stylesheet rules\n\t\t\t */\n\t\t\tvar sheet, cssRules, _link = document.createElement( 'link' );\n\t\t\tif ( 'sheet' in _link ) {\n\t\t\t\tsheet = 'sheet';\n\t\t\t\tcssRules = 'cssRules';\n\t\t\t} else {\n\t\t\t\tsheet = 'styleSheet';\n\t\t\t\tcssRules = 'rules';\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Add Stylesheets to iFrame\n\t\t\t */\n\t\t\tvar found = false,\n\t\t\t\t$css_list = jQuery();\n\t\t\tTVE.inner_$.each( response.css, function ( _id, href ) {\n\t\t\t\tif ( ! TVE.inner_$( 'link#' + _id + '-css' ).length ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\tvar $link = TVE.inner_$( '<link />', {\n\t\t\t\t\t\trel: 'stylesheet',\n\t\t\t\t\t\ttype: 'text/css',\n\t\t\t\t\t\tid: _id + '-css',\n\t\t\t\t\t\thref: href\n\t\t\t\t\t} ).appendTo( 'head' );\n\t\t\t\t\t/* for some reason, <link>s from google fonts always have empty cssRules fields - we cannot be sure when those are loaded using the check_loaded function */\n\t\t\t\t\tif ( href.indexOf( 'fonts.googleapis' ) === - 1 ) {\n\t\t\t\t\t\t$css_list = $css_list.add( $link );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif ( found ) {\n\t\t\t\tcheck_loaded( $css_list, on_resources_loaded );\n\t\t\t} else {\n\t\t\t\ton_resources_loaded()\n\t\t\t}\n\t\t},\n\n\t\tpopover: function () {\n\t\t\tvar $popover_selector = $( '.tqb-tcb-intervals-item' );\n\n\t\t\tif ( $popover_selector.data( 'bs.popover' ) ) {\n\t\t\t\t$popover_selector.popover( 'destroy' );\n\t\t\t}\n\t\t\t$popover_selector.popover( {} );\n\n\t\t\t$popover_selector.on( 'click', function ( e ) {\n\t\t\t\t$popover_selector.not( this ).popover( 'hide' );\n\t\t\t} );\n\t\t},\n\n\t\t/**\n\t\t * Hover functionality. Numeric Range Preview\n\t\t */\n\t\thover_numeric_range_preview: function () {\n\t\t\t$( '.tqb-tcb-intervals-item' ).hover(\n\t\t\t\tfunction () {\n\t\t\t\t\tvar $this = $( this );\n\t\t\t\t\tif ( ! $this.hasClass( 'tqb-tcb-intervals-item-active' ) ) {\n\t\t\t\t\t\t$( '.tqb-tcb-numeric-range-preview[data-id=\"' + $this.attr( 'data-id' ) + '\"]' ).css( 'visibility', 'visible' );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\tvar $this = $( this );\n\t\t\t\t\tif ( ! $this.hasClass( 'tqb-tcb-intervals-item-active' ) ) {\n\t\t\t\t\t\t$( '.tqb-tcb-numeric-range-preview[data-id=\"' + $this.attr( 'data-id' ) + '\"]' ).css( 'visibility', 'hidden' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t}\n})( jQuery );\n//# sourceURL=workspace/tcb-bridge/assets/js/internal/_utils.js")},"dynamic-content-component.js":function(exports,module,require){eval("/**\n * Created by Ovidiu on 6/26/2017.\n */\n\nmodule.exports = TVE.Views.Base.component.extend( {\n\tcontrols_init: function () {\n\t},\n\tplaceholder_action: function () {\n\t\tvar modal = TQB.ResultIntervals.get_instance( TVE.modal.get_element( 'result-intervals' ) );\n\t\tmodal.open( {\n\t\t\ttop: '20%',\n\t\t\tdismissible: false\n\t\t} );\n\t}\n} );\n//# sourceURL=workspace/tcb-bridge/assets/js/internal/dynamic-content-component.js")},"main.js":function(exports,module,require){eval("/**\n * Created by Ovidiu on 6/26/2017.\n */\n//var TVE = window.TVE || {};\n\nvar TQB = window.TQB = TQB || {};\n\n(function ( $ ) {\n\n\t/**\n\t * On TCB Main Ready\n\t */\n\t$( document ).on( 'tcb_main_ready', function () {\n\t\tTVE.Views.Components.tqb_dynamic_content = require( './dynamic-content-component' );\n\t\tTVE.Views.Components.tqb_social_share_badge = require( './social-share-badge-component' );\n\n\t\tTQB.ResultIntervals = require( './modals/result-intervals' );\n\t\tTQB.EqualizeIntervals = require( './modals/equalize-intervals' );\n\t\tTQB.ImportInterval = require( './modals/import-interval' );\n\t\tTQB.RemoveInterval = require( './modals/remove-interval' );\n\t\tTQB.DeleteDynamicContent = require( './modals/delete-dynamic-content' );\n\t\tTQB.VariationTemplates = require( './modals/variation-templates' );\n\t\tTQB.VariationReset = require( './modals/variation-reset' );\n\t\tTQB.VariationSave = require( './modals/variation-save' );\n\t\tTQB.SocialShareBadgeTemplates = require( './modals/social-share-badge-templates' );\n\t\tTQB.SaveValidation = require( './modals/save-validation' );\n\n\n\t\tif ( tqb_page_data.allow_tqb_advanced ) {\n\t\t\tTVE.add_filter( 'main_ajax_callback', function () {\n\t\t\t\tvar _states = require( './states' );\n\t\t\t\tTQB.States = new _states( {\n\t\t\t\t\tel: jQuery( '#tqb-form-states' )[0]\n\t\t\t\t} );\n\t\t\t\tTQB.States.click_first_state();\n\t\t\t} );\n\t\t}\n\n\n\t\tTVE.add_filter( 'editor_loaded_callback', function () {\n\n\t\t\tTVE.main.sidebar_settings.tqb_choose_template = function () {\n\t\t\t\tvar variationTemplatesModal = TQB.VariationTemplates.get_instance( TVE.modal.get_element( 'variation-templates' ) );\n\t\t\t\tvariationTemplatesModal.open( {\n\t\t\t\t\ttop: '10%',\n\t\t\t\t\tdismissible: (tqb_page_data.has_content)\n\t\t\t\t} );\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Open Template Chooser if the variation is empty\n\t\t\t */\n\t\t\tif ( ! tqb_page_data.has_content ) {\n\t\t\t\tTVE.main.sidebar_settings.tqb_choose_template();\n\t\t\t} else {\n\t\t\t\t/**\n\t\t\t\t * If the variation has content search for dynamic content elements and social share element.\n\t\t\t\t * If it is present on the page, hide them from the menu bar\n\t\t\t\t */\n\n\t\t\t\tif ( TVE.inner_$( '.tqb-dynamic-content-container' ).length > 0 ) {\n\t\t\t\t\tjQuery( '.tve-element[data-elem=\"tqb_dynamic_content\"]' ).addClass( 'tve-hide' );\n\t\t\t\t}\n\n\t\t\t\tif ( TVE.inner_$( '.tqb-social-share-badge-container' ).length > 0 ) {\n\t\t\t\t\tjQuery( '.tve-element[data-elem=\"tqb_social_share_badge\"]' ).addClass( 'tve-hide' );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tTVE.main.sidebar_settings.tqb_save_template = function () {\n\t\t\t\tvar variationSaveModal = TQB.VariationSave.get_instance( TVE.modal.get_element( 'variation-save' ) );\n\t\t\t\tvariationSaveModal.open( {\n\t\t\t\t\ttop: '20%'\n\t\t\t\t} );\n\t\t\t};\n\n\t\t\tTVE.main.sidebar_settings.tqb_reset_template = function () {\n\t\t\t\tvar variationResetsModal = TQB.VariationReset.get_instance( TVE.modal.get_element( 'variation-reset' ) );\n\t\t\t\tvariationResetsModal.open( {\n\t\t\t\t\ttop: '20%'\n\t\t\t\t} );\n\t\t\t};\n\n\t\t} );\n\n\t\tTVE.add_filter( 'element_drop', function ( $element ) {\n\t\t\tif ( $element.hasClass( 'tqb-dynamic-content-container' ) ) {\n\t\t\t\tif ( tqb_page_data.is_personality_type ) {\n\t\t\t\t\tTQB.States.generate_personality_states();\n\t\t\t\t} else {\n\t\t\t\t\tvar dynamicContent = TQB.ResultIntervals.get_instance( TVE.modal.get_element( 'result-intervals' ) );\n\t\t\t\t\tdynamicContent.open( {\n\t\t\t\t\t\ttop: '20%',\n\t\t\t\t\t\tdismissible: false\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( $element.hasClass( 'tqb-social-share-badge-container' ) ) {\n\t\t\t\tif ( $element.closest( '.tqb-dynamic-content-container' ).length ) {\n\t\t\t\t\t$element.remove();\n\t\t\t\t\tTVE.page_message( 'Social share element can not be dropped inside dynamic content element!', 2, 5000 );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\tTVE.add_filter( 'allow_remove', function ( return_default_value, params ) {\n\t\t\tvar $element = params[0];\n\t\t\tif ( $element.hasClass( 'tqb-dynamic-content-container' ) ) {\n\t\t\t\tTQB.States.delete_states();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t} );\n\n\t\tTVE.add_filter( 'element_remove', function ( $element ) {\n\n\t\t\t// Delete dynamic content if is inside another element.\n\t\t\tif ( $element.find( '.tqb-dynamic-content-container' ).length ) {\n\t\t\t\tTQB.States.delete_all_states();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Show Social Share Badge Element on Delete\n\t\t\t */\n\t\t\tif ( $element.hasClass( 'tqb-social-share-badge-container' ) || $element.find( '.tqb-social-share-badge-container' ).length ) {\n\t\t\t\tjQuery( '.tve-element[data-elem=\"tqb_social_share_badge\"]' ).removeClass( 'tve-hide' );\n\t\t\t}\n\t\t} );\n\n\t\tTVE.add_filter( 'validate_saved_content', function () {\n\n\t\t\tif ( tqb_page_data.variation_type === 'splash' || tqb_page_data.variation_type === 'optin' ) {\n\n\t\t\t\tif ( TVE.Editor_Page.editor.find( '.tqb-shortcode-submit-action' ).length > 0 ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tif ( TVE.Editor_Page.editor.find( '.thrv_lead_generation form' ).length > 0 ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tvar is_next_step = false;\n\t\t\t\tTVE.Editor_Page.editor.find( '.tve_evt_manager_listen' ).each( function ( index ) {\n\t\t\t\t\tvar event_string = $( this ).attr( 'data-tcb-events' ),\n\t\t\t\t\t\tevents = $.parseJSON( event_string.replace( '__TCB_EVENT_', '' ).replace( '_TNEVE_BCT__', '' ) );\n\n\t\t\t\t\tfor ( var i = 0, len = events.length; i < len; i ++ ) {\n\t\t\t\t\t\tif ( events[i].a === 'thrive_quiz_next_step' ) {\n\t\t\t\t\t\t\tis_next_step = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\tif ( is_next_step ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tvar SaveValidationModal = TQB.SaveValidation.get_instance( TVE.modal.get_element( 'save-validation' ) );\n\t\t\t\tSaveValidationModal.open( {\n\t\t\t\t\ttop: '20%'\n\t\t\t\t} );\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} );\n\n\t\tTVE.main.on( 'tve.tve_save_post', function ( event ) {\n\n\t\t\tTVE.Editor_Page.editor.find( '.thrv_lead_generation form' ).each( function ( index, form ) {\n\t\t\t\tif ( ! $( form ).hasClass( 'tqb-form' ) ) {\n\t\t\t\t\t$( form ).addClass( 'tqb-form' );\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\tpage_id: tqb_page_data.page_id,\n\t\t\t\t\t\tvariation_id: tqb_page_data.variation_id,\n\t\t\t\t\t};\n\t\t\t\t\tvar extra_fields = '<input type=\"hidden\" name=\"tqb-variation-page_id\" class=\"tqb-hidden-form-info\" value=\"' + tqb_page_data.page_id + '\" >';\n\t\t\t\t\textra_fields += '<input type=\"hidden\" name=\"tqb-variation-variation_id\" class=\"tqb-hidden-form-info\" value=\"' + tqb_page_data.variation_id + '\" >';\n\t\t\t\t\textra_fields += '<input type=\"hidden\" name=\"tqb-variation-user_unique\" class=\"tqb-hidden-form-info tqb-hidden-user-unique\" value=\"\" >';\n\t\t\t\t\t$( form ).prepend( extra_fields );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t} );\n\n\t} );\n\n\tTVE.add_filter( 'tve_form_submit_options', function ( options ) {\n\t\tif ( tqb_page_data.variation_type === 'splash' || tqb_page_data.variation_type === 'optin' ) {\n\t\t\toptions = [\n\t\t\t\t{\n\t\t\t\t\tkey: 'next_step',\n\t\t\t\t\tlabel: TVE.t.NextStepInQuiz,\n\t\t\t\t\tcss_class: 'tcb-lg-option-next_step',\n\t\t\t\t\ticon: 'tqb_next_step'\n\t\t\t\t}\n\t\t\t];\n\t\t}\n\t\treturn options;\n\t} );\n\n\tTVE.add_filter( 'tve_form_hide_custom_html_option', function ( option ) {\n\t\tif ( tqb_page_data.variation_type === 'splash' || tqb_page_data.variation_type === 'optin' ) {\n\t\t\treturn true;\n\t\t}\n\t\treturn option;\n\t} );\n\n\t$( document ).ready( function () {\n\t\t\tTVE.add_filter( 'before_editor_events', function () {\n\t\t\t\tTVE.add_filter( 'tcb_froala_config', function () {\n\t\t\t\t\tvar EDITOR_INSTANCE = 1;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tlinkEventActions: {\n\t\t\t\t\t\t\tgetHtml: function () {\n\t\t\t\t\t\t\t\treturn TVE.tpl( 'froala-extra-fields' )( {\n\t\t\t\t\t\t\t\t\tkey: 'thrive_quiz_next_step',\n\t\t\t\t\t\t\t\t\tcurrent_id: ++ EDITOR_INSTANCE\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tbindEvents: function ( $popup ) {\n\t\t\t\t\t\t\t\t$popup.on( 'change', '.fr-extra-action', function ( e ) {\n\t\t\t\t\t\t\t\t\t$popup.find( '.tl-action-config' ).hide();\n\t\t\t\t\t\t\t\t\tif ( ! this.checked ) {\n\t\t\t\t\t\t\t\t\t\t$popup.find( '.fr-link-url input' ).val( '' );\n\t\t\t\t\t\t\t\t\t\t$popup.find( '.fr-link-atts,.fr-link-url' ).show();\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t$popup.find( '.fr-link-atts,.fr-link-url' ).hide();\n\t\t\t\t\t\t\t\t\t\t$popup.find( '.fr-extra-action' ).not( this ).prop( 'checked', false );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\thasSelected: function ( $popup ) {\n\t\t\t\t\t\t\t\treturn $popup.find( '.fr-extra-action:checked' ).length;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treset: function ( $popup ) {\n\t\t\t\t\t\t\t\t$popup.find( '.fr-extra-action' ).prop( 'checked', false );\n\t\t\t\t\t\t\t\t$popup.find( '.fr-link-atts,.fr-link-url' ).show();\n\t\t\t\t\t\t\t\t$popup.find( '.tl-action-config' ).hide();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tgetEventConfig: function ( $popup ) {\n\t\t\t\t\t\t\t\tvar event = {};\n\t\t\t\t\t\t\t\tevent.a = 'thrive_quiz_next_step';\n\t\t\t\t\t\t\t\tevent.t = 'click';\n\n\t\t\t\t\t\t\t\treturn event;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tupdateFromLink: function ( $link, $popup ) {\n\t\t\t\t\t\t\t\tvar tqb_event_found = false;\n\t\t\t\t\t\t\t\tthis.reset( $popup );\n\n\t\t\t\t\t\t\t\tif ( $link.hasClass( 'tve_evt_manager_listen' ) ) {\n\t\t\t\t\t\t\t\t\tvar evt = TVE.EventManager.get( $link, 'click' );\n\t\t\t\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\t\t\t\t$popup.find( '.fr-extra-action' ).prop( 'checked', true ).trigger( 'change' );\n\t\t\t\t\t\t\t\t\t\ttqb_event_found = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn tqb_event_found;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t} );\n\n\t\t\t} );\n\t\t}\n\t);\n\n})( jQuery );\n//# sourceURL=workspace/tcb-bridge/assets/js/internal/main.js")},modals:{"delete-dynamic-content.js":function(exports,module,require){eval("/**\n * Created by Ovidiu on 6/28/2017.\n */\nvar _instance = null;\n\nmodule.exports = TVE.modal.base.extend( {\n\tafter_initialize: function () {\n\t\tthis.$el.addClass( 'medium' );\n\t},\n\t/**\n\t * Delete Dynamic Content Modal Callback\n\t * Triggers delete all states function\n\t *\n\t * @param event\n\t * @param dom\n\t */\n\tdelete_all_dynamic_content: function ( event, dom ) {\n\t\tTQB.States.delete_all_states();\n\t\tthis.close();\n\t}\n}, {\n\t/**\n\t * \"Singleton\" implementation for modal instance\n\t *\n\t * @param el\n\t */\n\tget_instance: function ( el ) {\n\t\tif ( ! _instance ) {\n\t\t\t_instance = new TQB.DeleteDynamicContent( {\n\t\t\t\tel: el\n\t\t\t} );\n\t\t}\n\n\t\treturn _instance;\n\t}\n} );\n//# sourceURL=workspace/tcb-bridge/assets/js/internal/modals/delete-dynamic-content.js")},"equalize-intervals.js":function(exports,module,require){eval("/**\n * Created by Ovidiu on 6/27/2017.\n */\nvar _instance = null,\n\t_utils = require( '../_utils' );\n\nmodule.exports = TVE.modal.base.extend( {\n\tafter_initialize: function () {\n\t\tthis.$el.addClass( 'medium' );\n\t},\n\tequalize_intervals: function ( event, dom ) {\n\t\tvar self = this;\n\n\t\t_utils.state_ajax( {\n\t\t\tcustom: 'equalize'\n\t\t} ).done( function ( response ) {\n\t\t\t_utils.insertStateResponse( response );\n\n\t\t\tTQB.States.click_first_state();\n\n\t\t\tself.close();\n\t\t} );\n\t}\n}, {\n\t/**\n\t * \"Singleton\" implementation for modal instance\n\t *\n\t * @param el\n\t */\n\tget_instance: function ( el ) {\n\t\tif ( ! _instance ) {\n\t\t\t_instance = new TQB.EqualizeIntervals( {\n\t\t\t\tel: el\n\t\t\t} );\n\t\t}\n\n\t\treturn _instance;\n\t}\n} );\n//# sourceURL=workspace/tcb-bridge/assets/js/internal/modals/equalize-intervals.js")},"import-interval.js":function(exports,module,require){eval("/**\n * Created by Ovidiu on 6/28/2017.\n */\nvar _instance = null,\n\t_utils = require( '../_utils' );\n\nmodule.exports = TVE.modal.base.extend( {\n\tafter_initialize: function () {\n\t\tthis.$el.addClass( 'medium' );\n\t},\n\tbefore_open: function () {\n\t\tvar html = '<option value=\"\" selected=\"selected\">Select an interval</option>';\n\n\t\t_.each( tqb_page_data.intervals, function ( value, key ) {\n\t\t\tif ( parseInt( value.id ) !== parseInt( this.child_id ) ) {\n\t\t\t\thtml += '<option value=\"' + value.id + '\">' + value.post_title + '</option>'\n\t\t\t}\n\t\t}, this );\n\n\t\tthis.$( '#tqb-import-from' ).html( html );\n\t},\n\n\t/**\n\t * Import content Ajax Action\n\t *\n\t * @param event\n\t * @param dom\n\t * @returns {boolean}\n\t */\n\timport_content: function ( event, dom ) {\n\t\tvar self = this,\n\t\t\timport_from = this.$( '#tqb-import-from' ).val();\n\n\t\tif ( ! _utils.is_integer_number( this.child_id ) || ! _utils.is_integer_number( import_from ) ) {\n\t\t\tTVE.page_message( 'Select an option', 2, 5000 );\n\t\t\treturn false;\n\t\t}\n\n\t\t_utils.state_ajax( {\n\t\t\tcustom: 'import',\n\t\t\timport_to: this.child_id,\n\t\t\timport_from: import_from\n\t\t} ).done( function ( html ) {\n\t\t\tTVE.inner_$( '.tqb-dynamic-content-container' ).html( html );\n\t\t\tself.close();\n\t\t} );\n\t}\n}, {\n\t/**\n\t * \"Singleton\" implementation for modal instance\n\t *\n\t * @param el\n\t */\n\tget_instance: function ( el ) {\n\t\tif ( ! _instance ) {\n\t\t\t_instance = new TQB.ImportInterval( {\n\t\t\t\tel: el\n\t\t\t} );\n\t\t}\n\n\t\treturn _instance;\n\t}\n} );\n//# sourceURL=workspace/tcb-bridge/assets/js/internal/modals/import-interval.js")},"remove-interval.js":function(exports,module,require){eval("/**\n * Created by Ovidiu on 6/28/2017.\n */\nvar _instance = null,\n\t_utils = require( '../_utils' );\n\nmodule.exports = TVE.modal.base.extend( {\n\tafter_initialize: function () {\n\t\tthis.$el.addClass( 'medium' );\n\t},\n\tremove_interval: function ( event, dom ) {\n\t\tvar self = this,\n\t\t\tchild_to_click = (this.child_next_id) ? this.child_next_id : this.child_prev_id;\n\n\t\tif ( ! _utils.is_integer_number( this.child_id ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t_utils.state_ajax( {\n\t\t\tcustom: 'remove',\n\t\t\tchild_id: this.child_id,\n\t\t\tchild_prev_id: this.child_prev_id,\n\t\t\tchild_next_id: this.child_next_id\n\t\t} ).done( function ( response ) {\n\t\t\t_utils.insertStateResponse( response );\n\t\t\tjQuery( '.tqb-tcb-intervals-item[data-id=\"' + child_to_click + '\"]' ).trigger( 'click' );\n\t\t\tself.close();\n\t\t} );\n\t}\n}, {\n\t/**\n\t * \"Singleton\" implementation for modal instance\n\t *\n\t * @param el\n\t */\n\tget_instance: function ( el, params ) {\n\t\tif ( ! _instance ) {\n\t\t\t_instance = new TQB.RemoveInterval( {\n\t\t\t\tel: el\n\t\t\t} );\n\t\t}\n\n\t\treturn _instance;\n\t}\n} );\n//# sourceURL=workspace/tcb-bridge/assets/js/internal/modals/remove-interval.js")},"result-intervals.js":function(exports,module,require){eval("/**\n * Created by Ovidiu on 6/26/2017.\n */\n\nvar _instance = null,\n\t_utils = require( '../_utils' );\n\nmodule.exports = TVE.modal.base.extend( {\n\tafter_initialize: function () {\n\t\tthis.$el.addClass( 'medium' );\n\t},\n\tbefore_close: function () {\n\t\t// Remove Dynamic Content Element if it's not saved.\n\t\tif ( ! TVE.inner_$( '.tqb-dynamic-content-container' ).attr( 'tqb-saved' ) ) {\n\t\t\tTVE.inner_$( '#tqb-editor-replace' ).find( '.tqb-dynamic-content-container' ).remove();\n\t\t}\n\t},\n\t/**\n\t * Redirects to custom href\n\t *\n\t * @param $btn\n\t */\n\tredirect: function ( event, dom ) {\n\t\tif ( dom.getAttribute( 'data-href' ) ) {\n\t\t\ttop.location.href = dom.getAttribute( 'data-href' );\n\t\t}\n\t},\n\n\t/**\n\t * Copy dynamic content from previous page (result / opt-in)\n\t */\n\tcopy_states_from_prev_page: function () {\n\t\tvar self = this;\n\n\t\t_utils.state_ajax( {\n\t\t\tcustom: 'copy_similar_dynamic_content'\n\t\t} ).done( function ( response ) {\n\t\t\tTVE.inner_$( '.tqb-dynamic-content-container' ).removeClass( 'tcb-elem-placeholder' );\n\n\t\t\t_utils.insertStateResponse( response );\n\t\t\t_utils.show_hide_dynamic_content_element();\n\t\t\tTQB.States.click_first_state();\n\n\t\t\tself.close();\n\t\t} );\n\t},\n\n\tsave_states_number: function ( event, dom ) {\n\t\tvar self = this,\n\t\t\t_result_interval = this.$el.find( '#tqb_result_intervals' ).val(),\n\t\t\t_interval_max = parseInt( this.$el.find( '#tqb_result_intervals' ).attr( 'max' ) );\n\n\t\tif ( ! _utils.is_integer_number( _result_interval ) ) {\n\t\t\tTVE.page_message( 'The input must be an integer number', 2, 5000 );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( _result_interval > _interval_max || _result_interval < 0 ) {\n\t\t\tTVE.page_message( 'The input must be between 0 and ' + _interval_max, 2, 5000 );\n\t\t\treturn;\n\t\t}\n\n\t\t_utils.state_ajax( {\n\t\t\tcustom: 'set_result_intervals',\n\t\t\tresult_interval: _result_interval\n\t\t} ).done( function ( response ) {\n\t\t\tTVE.inner_$( '.tqb-dynamic-content-container' ).removeClass( 'tcb-elem-placeholder' );\n\n\t\t\t_utils.insertStateResponse( response );\n\t\t\t_utils.show_hide_dynamic_content_element();\n\n\t\t\tTQB.States.click_first_state();\n\n\t\t\tself.close();\n\t\t} );\n\t},\n\tpreview_states: function ( event, dom ) {\n\t\tvar _value = dom.value,\n\t\t\t_html = '',\n\t\t\t$interval_prev = this.$el.find( '#tqb-intervals-preview' ),\n\t\t\t_interval_max = parseInt( this.$el.find( '#tqb_result_intervals' ).attr( 'max' ) );\n\n\t\tif ( ! _utils.is_integer_number( _value ) ) {\n\t\t\tTVE.page_message( 'The input must be an integer number', 2, 5000 );\n\t\t\t$interval_prev.html( '' );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( _value > _interval_max || _value < 1 ) {\n\t\t\tTVE.page_message( 'The input must be between 1 and ' + _interval_max, 2, 5000 );\n\t\t\t$interval_prev.html( '' );\n\t\t\treturn;\n\t\t}\n\n\t\t_html += '<div class=\"tqb-tcb-intervals-preview-row\">';\n\t\tfor ( var i = 0; i < _value; i ++ ) {\n\t\t\t_html += '<div class=\"tqb-tcb-intervals-preview-column\"></div>'\n\t\t}\n\t\t_html += '</div>';\n\t\t_html += '<div class=\"tqb-tcb-number-preview\"><div class=\"tcb-left\">' + tqb_page_data.quiz_config.absolute_min_value + '</div><div class=\"tcb-right\">' + tqb_page_data.quiz_config.absolute_max_value + '</div></div>'\n\t\t$interval_prev.html( _html );\n\t}\n\n}, {\n\t/**\n\t * \"Singleton\" implementation for modal instance\n\t *\n\t * @param el\n\t */\n\tget_instance: function ( el ) {\n\t\tif ( ! _instance ) {\n\t\t\t_instance = new TQB.ResultIntervals( {\n\t\t\t\tel: el\n\t\t\t} );\n\t\t}\n\n\t\treturn _instance;\n\t}\n} );\n//# sourceURL=workspace/tcb-bridge/assets/js/internal/modals/result-intervals.js")},"save-validation.js":function(exports,module,require){eval("var _instance = null,\n\t_utils = require( '../_utils' );\n\nmodule.exports = TVE.modal.base.extend( {\n\tafter_initialize: function () {\n\t\tthis.$el.addClass( 'medium' );\n\t}\n}, {\n\t/**\n\t * \"Singleton\" implementation for modal instance\n\t *\n\t * @param el\n\t */\n\tget_instance: function ( el ) {\n\t\tif ( ! _instance ) {\n\t\t\t_instance = new TQB.SaveValidation( {\n\t\t\t\tel: el\n\t\t\t} );\n\t\t}\n\n\t\treturn _instance;\n\t}\n} );\n//# sourceURL=workspace/tcb-bridge/assets/js/internal/modals/save-validation.js")},"social-share-badge-templates.js":function(exports,module,require){eval("/**\n * Created by Ovidiu on 6/30/2017.\n */\nvar _instance = null,\n\t_utils = require( '../_utils' );\n\nmodule.exports = TVE.modal.base.extend( {\n\tafter_initialize: function () {\n\t\tthis.$el.addClass( 'medium' );\n\t},\n\tbefore_close: function () {\n\t\tTVE.inner_$( '#tqb-editor-replace' ).find( '.tqb-social-share-badge-container.tcb-elem-placeholder' ).remove();\n\t},\n\tselect_template: function ( event ) {\n\t\tthis.$( '.template-wrapper.active' ).removeClass( 'active' );\n\t\tevent.currentTarget.classList.toggle( 'active' );\n\t},\n\tchoose_template: function () {\n\t\tvar $template = this.$( '.tve-template-item .active' ),\n\t\t\tself = this;\n\t\tif ( $template && $template.length ) {\n\n\t\t\t_utils.state_ajax( {\n\t\t\t\tcustom: 'get_social_share_badge_template',\n\t\t\t\ttemplate: $template.data( 'key' )\n\t\t\t} ).done( function ( response ) {\n\t\t\t\tTVE.inner_$( '.tqb-social-share-badge-container' ).removeClass( 'tcb-elem-placeholder' ).html( response );\n\t\t\t\t_utils.show_hide_social_share_badge_element();\n\t\t\t\tself.close();\n\t\t\t} );\n\t\t} else {\n\t\t\tTVE.page_message( tqb_page_data.L.alert_choose_tpl, true );\n\t\t}\n\t}\n}, {\n\t/**\n\t * \"Singleton\" implementation for modal instance\n\t *\n\t * @param el\n\t */\n\tget_instance: function ( el ) {\n\t\tif ( ! _instance ) {\n\t\t\t_instance = new TQB.SocialShareBadgeTemplates( {\n\t\t\t\tel: el\n\t\t\t} );\n\t\t}\n\n\t\treturn _instance;\n\t}\n} );\n//# sourceURL=workspace/tcb-bridge/assets/js/internal/modals/social-share-badge-templates.js")},"variation-reset.js":function(exports,module,require){
eval("/**\n * Created by Ovidiu on 6/29/2017.\n */\nvar _instance = null,\n\t_utils = require( '../_utils' );\n\nmodule.exports = TVE.modal.base.extend( {\n\tafter_initialize: function () {\n\t\tthis.$el.addClass( 'medium' );\n\t},\n\treset: function () {\n\t\tvar self = this;\n\t\t_utils.tpl_ajax( {\n\t\t\tcustom: 'reset'\n\t\t} ).done( function ( response ) {\n\t\t\t_utils.insertResponse( response );\n\t\t\tself.close();\n\t\t\tTVE.main.overlay( 'close' );\n\t\t} );\n\t}\n}, {\n\t/**\n\t * \"Singleton\" implementation for modal instance\n\t *\n\t * @param el\n\t */\n\tget_instance: function ( el ) {\n\t\tif ( ! _instance ) {\n\t\t\t_instance = new TQB.VariationReset( {\n\t\t\t\tel: el\n\t\t\t} );\n\t\t}\n\n\t\treturn _instance;\n\t}\n} );\n//# sourceURL=workspace/tcb-bridge/assets/js/internal/modals/variation-reset.js")},"variation-save.js":function(exports,module,require){eval("/**\n * Created by Ovidiu on 6/29/2017.\n */\nvar _instance = null,\n\t_utils = require( '../_utils' );\n\nmodule.exports = TVE.modal.base.extend( {\n\tafter_initialize: function () {\n\t\tthis.$el.addClass( 'medium' );\n\t},\n\tsave: function () {\n\t\tvar _name = this.$( 'input#tve-template-name' ).val(),\n\t\t\tself = this;\n\n\t\tif ( _name && _name.length > 0 ) {\n\t\t\t_utils.tpl_ajax( {\n\t\t\t\tcustom: 'save',\n\t\t\t\tname: _name\n\t\t\t} ).done( function ( response ) {\n\t\t\t\tself.close();\n\t\t\t\tTVE.main.overlay( 'close' );\n\t\t\t} );\n\t\t} else {\n\t\t\tTVE.page_message( tqb_page_data.L.tpl_name_required, true, 5000 );\n\t\t}\n\t}\n}, {\n\t/**\n\t * \"Singleton\" implementation for modal instance\n\t *\n\t * @param el\n\t */\n\tget_instance: function ( el ) {\n\t\tif ( ! _instance ) {\n\t\t\t_instance = new TQB.VariationSave( {\n\t\t\t\tel: el\n\t\t\t} );\n\t\t}\n\n\t\treturn _instance;\n\t}\n} );\n//# sourceURL=workspace/tcb-bridge/assets/js/internal/modals/variation-save.js")},"variation-templates.js":function(exports,module,require){eval("/**\n * Created by Ovidiu on 6/29/2017.\n */\nvar _instance = null,\n\t_utils = require( '../_utils' );\n\n\nmodule.exports = TVE.modal.base.extend( {\n\tsaved_tpl_delete_confirmation: TVE.tpl( 'landing-pages/delete-confirmation' ),\n\tevents: function () {\n\t\treturn _.extend( {}, TVE.modal.base.prototype.events(), {\n\t\t\t'click .tcb-cancel-delete-template': 'no_delete_template',\n\t\t\t'click .tcb-apply-delete-template': 'yes_delete_template'\n\t\t} );\n\t},\n\tafter_initialize: function () {\n\t\tthis.$el.addClass( 'medium' );\n\t\tthis.$tabs = this.$( '.tab-item' );\n\t\tthis.$content = this.$( '.tve-tab-content' );\n\t},\n\ttab_click: function ( event ) {\n\t\tvar tab = event.currentTarget.getAttribute( 'data-content' );\n\n\t\tthis.$tabs.removeClass( 'active' );\n\t\tevent.currentTarget.classList.add( 'active' );\n\n\t\tthis.$content.removeClass( 'active' );\n\t\tthis.$content.filter( '[data-content=\"' + tab + '\"]' ).addClass( 'active' );\n\n\t\tif ( tab === 'saved' ) {\n\t\t\tthis.get_saved();\n\t\t}\n\t},\n\tselect_template: function ( event ) {\n\t\tthis.$( '.template-wrapper.active' ).removeClass( 'active' );\n\t\tevent.currentTarget.classList.toggle( 'active' );\n\t},\n\n\t/**\n\t * Shows The Delete Confirmation View\n\t *\n\t * @param event\n\t */\n\tdelete_confirmation: function ( event ) {\n\t\tvar $templateItem = jQuery( event.currentTarget ).closest( '.tve-template-item' );\n\n\t\t$templateItem.find( '.template-wrapper' ).hide();\n\t\t$templateItem.append( this.saved_tpl_delete_confirmation() );\n\t},\n\n\t/**\n\t * Cancel A Delete Action And Returns to Default State\n\t *\n\t * @param event\n\t */\n\tno_delete_template: function ( event ) {\n\t\tvar $templateItem = jQuery( event.currentTarget ).closest( '.tve-template-item' );\n\t\t$templateItem.find( '.template-wrapper' ).show();\n\t\t$templateItem.find( '.tcb-delete-template-confirmation' ).remove();\n\t},\n\n\t/**\n\t * Deletes A Saved Landing Page\n\t *\n\t * @param event\n\t */\n\tyes_delete_template: function ( event ) {\n\t\tvar $templateItem = jQuery( event.currentTarget ).closest( '.tve-template-item' );\n\n\t\tTVE.main.overlay();\n\t\t_utils.tpl_ajax( {\n\t\t\tcustom: 'delete'\n\t\t}, {\n\t\t\tdataType: 'html',\n\t\t\ttpl: $templateItem.attr( 'data-id' )\n\t\t}, true ).done( function () {\n\t\t\t$templateItem.remove();\n\t\t\tTVE.main.overlay( 'close' );\n\t\t} );\n\t},\n\tget_saved: function () {\n\t\tvar self = this;\n\n\t\tthis.$( '.tve-saved-templates-list' ).html( tqb_page_data.L.fetching_saved_templates );\n//\t\tvar current_template = $( '#tqb-user-current-templates:checked' ).length;\n\t\t_utils.tpl_ajax( {\n\t\t\tcustom: 'get_saved',\n//\t\t\tcurrent_template: current_template\n\t\t}, {\n\t\t\tdataType: 'html'\n\t\t}, true ).done( function ( response ) {\n\t\t\tTVE.main.overlay( 'close' );\n\t\t\tself.$( '.tve-saved-templates-list' ).html( response );\n\t\t} );\n\t},\n\tsave: function () {\n\t\tvar $template = this.$( '.tve-template-item .active' ),\n\t\t\tself = this;\n\t\tif ( $template && $template.length ) {\n\n\t\t\t_utils.tpl_ajax( {\n\t\t\t\tcustom: 'choose',\n\t\t\t\ttpl: $template.data( 'key' )\n\t\t\t} ).done( function ( response ) {\n\t\t\t\t_utils.insertResponse( response );\n\n\t\t\t\tTVE.main.overlay( 'close' );\n\t\t\t\tself.close();\n\t\t\t} );\n\n\t\t} else {\n\t\t\tTVE.page_message( TVE.t.SelectTemplate, true, 5000 );\n\t\t}\n\t}\n}, {\n\t/**\n\t * \"Singleton\" implementation for modal instance\n\t *\n\t * @param el\n\t */\n\tget_instance: function ( el ) {\n\t\tif ( ! _instance ) {\n\t\t\t_instance = new TQB.VariationTemplates( {\n\t\t\t\tel: el\n\t\t\t} );\n\t\t}\n\n\t\treturn _instance;\n\t}\n} );\n//# sourceURL=workspace/tcb-bridge/assets/js/internal/modals/variation-templates.js")}},"social-share-badge-component.js":function(exports,module,require){eval("/**\n * Created by Ovidiu on 6/30/2017.\n */\n\nvar collection = new Backbone.Collection();\nfunction get_renderer() {\n\treturn TVE.renderers.CONSTRUCTORS.social.extend( {\n\t\trender_to: function ( $element, add_undo_step ) {\n\t\t\tTVE.renderers.CONSTRUCTORS.social.prototype.render_to.call( this, $element.find( '.tve_social_items' ), add_undo_step )\n\t\t},\n\t\t/**\n\t\t * Private render method. Should not be called directly\n\t\t * Renders the contents of the element\n\t\t *\n\t\t * @param {jQuery} $element\n\t\t * @param {Boolean} [add_undo_step] whether or not to record an undo step\n\t\t * @returns {*}\n\t\t */\n\t\t_render_to: function ( $element, add_undo_step ) {\n\t\t\tvar counts = {};\n\t\t\t$element.find( '.tve_s_count' ).each( function () {\n\t\t\t\tvar $this = jQuery( this );\n\t\t\t\tcounts[$this.closest( '.tve_s_item' ).attr( 'data-s' )] = $this.text();\n\t\t\t} );\n\t\t\tcounts.total = {\n\t\t\t\tvalue: 0,\n\t\t\t\tformatted: 0\n\t\t\t};\n\t\t\tif ( TVE.inner.window.TCB_Front.total_share_counts && TVE.inner.window.TCB_Front.total_share_counts[this.config.share_url] ) {\n\t\t\t\tcounts.total = TVE.inner.window.TCB_Front.total_share_counts[this.config.share_url];\n\t\t\t}\n\t\t\tvar $social_elements_html = jQuery( TVE.tpl( 'elements/social' )( {r: this, config: this.config, counts: counts} ) ),\n\t\t\t\tconfig = this.config;\n\t\t\t$social_elements_html.find( '.tve_s_item' ).each( function () {\n\t\t\t\tvar k = this.getAttribute( 'data-s' ),\n\t\t\t\t\telem = this;\n\t\t\t\t_.each( config[k], function ( value, field ) {\n\t\t\t\t\tif ( value && field !== 'href' ) { // href defined globally\n\t\t\t\t\t\telem.setAttribute( 'data-' + field, value );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t\t$social_elements_html.attr( 'data-counts', this.config.show_count ? '1' : '' );\n\t\t\t$social_elements_html.attr( 'data-min_shares', this.config.min_shares );\n\n\t\t\t$element.replaceWith( $social_elements_html );\n\t\t}\n\t} );\n}\n\nmodule.exports = TVE.Views.Components.Social.extend( {\n\tcontrols_init: function () {\n\t\tthis.renderer = new (get_renderer())( 'tqb_social_share_badge' );\n\t\tthis.renderer.setup_defaults();\n\n\t\tTVE.Views.Components.Social.prototype.controls_init.call( this );\n\t},\n\tget_collection: function () {\n\t\treturn collection;\n\t},\n\tchange_template: function () {\n\t\tthis.placeholder_action();\n\t},\n\tplaceholder_action: function () {\n\t\tvar socialShareBadgeTemplateModal = TQB.SocialShareBadgeTemplates.get_instance( TVE.modal.get_element( 'social-share-badge-template' ) );\n\t\tsocialShareBadgeTemplateModal.open( {\n\t\t\ttop: '20%',\n\t\t\tdismissible: false\n\t\t} );\n\t}\n} );\n//# sourceURL=workspace/tcb-bridge/assets/js/internal/social-share-badge-component.js")},"states.js":function(exports,module,require){eval("/**\n * Created by Ovidiu on 6/27/2017.\n */\nvar _util = require( './_utils' );\n\nmodule.exports = TVE.Views.Base.component.extend( {\n\tinitialize: function ( args ) {\n\t\t_util.popover();\n\t\t_util.hover_numeric_range_preview();\n\n\t\tTVE.add_filter( 'validate_saved_content', function () {\n\t\t\tvar $dynamic_content = TVE.inner_$( '.tqb-dynamic-content-container' );\n\t\t\t//Send the css to the dynamic content also when clicking on save button\n\t\t\tif ( $dynamic_content.length ) {\n\t\t\t\tvar $dynamic_content_clone = $dynamic_content.clone();\n\n\t\t\t\t$dynamic_content_clone.wrap( '<div></div>' );\n\t\t\t\t$dynamic_content_clone = $dynamic_content_clone.parent();\n\n\t\t\t\tTVE.CONST.custom_post_data.tqb_child_variation_css = JSON.stringify( $dynamic_content_clone.collect_head_css() );\n\t\t\t}\n\t\t\treturn true;\n\t\t} );\n\t},\n\tequalize: function () {\n\t\tvar equalizeModal = TQB.EqualizeIntervals.get_instance( TVE.modal.get_element( 'equalize-intervals' ) );\n\t\tequalizeModal.open( {\n\t\t\ttop: '20%'\n\t\t} );\n\t},\n\treset: function () {\n\t\tvar resetModal = TQB.ResultIntervals.get_instance( TVE.modal.get_element( 'result-intervals' ) );\n\t\tresetModal.open( {\n\t\t\ttop: '20%'\n\t\t} );\n\t},\n\t/**\n\t * Generate ABC child variations\n\t */\n\tgenerate_personality_states: function () {\n\t\tvar self = this;\n\n\t\t_util.state_ajax( {\n\t\t\tcustom: 'generate_personality_child_variations'\n\t\t} ).done( function ( response ) {\n\t\t\tTVE.inner_$( '.tqb-dynamic-content-container' ).removeClass( 'tcb-elem-placeholder' );\n\n\t\t\t_util.insertStateResponse( response );\n\t\t\t/* Click the first state item */\n\t\t\tself.click_first_state();\n\t\t} );\n\t},\n\t/**\n\t * Update interval limits\n\t */\n\tupdate_intervals: function () {\n\t\tvar self = this,\n\t\t\tmin = this.$( '#tqb-range-min' ).val(),\n\t\t\tmax = this.$( '#tqb-range-max' ).val(),\n\t\t\tprev_min = parseInt( this.$( '#tqb-prev-min' ).val() ),\n\t\t\tnext_max = parseInt( this.$( '#tqb-next-max' ).val() ),\n\t\t\tchild_id = this.$( '#tqb-child-id' ).val(),\n\t\t\tchild_prev_id = this.$( '#tqb-child-prev-id' ).val(),\n\t\t\tchild_next_id = this.$( '#tqb-child-next-id' ).val();\n\n\t\t/*\n\t\t The input must be an integer number\n\t\t */\n\t\tif ( ! _util.is_integer_number( max ) || ! _util.is_integer_number( min ) ) {\n\t\t\tTVE.page_message( 'The input must be an integer number', 2, 5000 );\n\t\t\treturn;\n\t\t}\n\n\t\t/*\n\t\t Check for limits of the intervals change:\n\t\t */\n\t\tif ( ! _util.is_integer_number( prev_min ) && min != tqb_page_data.quiz_config.absolute_min_value ) {\n\t\t\tTVE.page_message( tqb_page_data.L.intervals_min_val_cannot_be_changed, 2, 5000 );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! _util.is_integer_number( next_max ) && max != tqb_page_data.quiz_config.absolute_max_value ) {\n\t\t\tTVE.page_message( tqb_page_data.L.intervals_max_val_cannot_be_changed, 2, 5000 );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t END Check for limits of the intervals change:\n\t\t */\n\n\t\t/*\n\t\t Check for the minimum requirements\n\t\t */\n\t\tif ( min < (prev_min + 1) ) {\n\t\t\tTVE.page_message( tqb_page_data.L.min_value_limit + (prev_min + 1), 2, 5000 );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( max > (next_max - 1) ) {\n\t\t\tTVE.page_message( tqb_page_data.L.max_value_limit + (next_max - 1), 2, 5000 );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t END Check for the minimum requirements\n\t\t */\n\n\t\t/*\n\t\t * Additional Checks\n\t\t */\n\t\tif ( parseInt( max ) < parseInt( min ) ) {\n\t\t\tTVE.page_message( 'ERROR: Max value can not be greater than min value', 2 );\n\t\t\treturn;\n\t\t}\n\t\t/*\n\t\t * END Additional Checks\n\t\t */\n\n\t\tif ( child_id ) {\n\t\t\t_util.state_ajax( {\n\t\t\t\tcustom: 'update',\n\t\t\t\tmin: min,\n\t\t\t\tmax: max,\n\t\t\t\tchild_id: child_id,\n\t\t\t\tchild_prev_id: child_prev_id,\n\t\t\t\tchild_next_id: child_next_id,\n\t\t\t\tquiz_min: tqb_page_data.quiz_config.absolute_min_value,\n\t\t\t\tquiz_max: tqb_page_data.quiz_config.absolute_max_value\n\t\t\t} ).done( function ( response ) {\n\t\t\t\t_util.insertStateResponse( response );\n\t\t\t\tself.$( '.tqb-tcb-intervals-item[data-id=\"' + child_id + '\"]' ).trigger( 'click' );\n\t\t\t} );\n\t\t} else {\n\t\t\tTVE.page_message( 'Something is wrong! Please contact Thrive Support!' );\n\t\t}\n\t},\n\t/**\n\t * Split a state into 2 equal states\n\t *\n\t * @returns {boolean}\n\t */\n\tstate_split: function () {\n\t\tvar child_id = this.$( '#tqb-child-id' ).val(),\n\t\t\tself = this;\n\n\t\tif ( ! _util.is_integer_number( child_id ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t_util.state_ajax( {\n\t\t\tcustom: 'split',\n\t\t\tchild_id: child_id\n\t\t} ).done( function ( response ) {\n\t\t\t_util.insertStateResponse( response );\n\t\t\tself.$( '.tqb-tcb-intervals-item[data-id=\"' + child_id + '\"]' ).trigger( 'click' );\n\t\t} );\n\t},\n\n\timport_content: function () {\n\t\tvar importModal = TQB.ImportInterval.get_instance( TVE.modal.get_element( 'import-content' ) );\n\t\timportModal.child_id = this.$( '#tqb-child-id' ).val();\n\t\timportModal.open( {\n\t\t\ttop: '20%'\n\t\t} );\n\t},\n\n\tremove_state: function () {\n\t\tvar removeIntervalModal = TQB.RemoveInterval.get_instance( TVE.modal.get_element( 'remove-interval' ) );\n\n\t\tremoveIntervalModal.child_id = this.$( '#tqb-child-id' ).val();\n\t\tremoveIntervalModal.child_prev_id = this.$( '#tqb-child-prev-id' ).val();\n\t\tremoveIntervalModal.child_next_id = this.$( '#tqb-child-next-id' ).val();\n\n\t\tremoveIntervalModal.open( {\n\t\t\ttop: '20%'\n\t\t} );\n\t},\n\n\tstate_click: function ( event, dom ) {\n\t\tif ( ! TVE.CONST.custom_post_data ) {\n\t\t\tTVE.CONST.custom_post_data = {};\n\t\t}\n\t\tTVE.CONST.custom_post_data.tqb_child_variation_id = this.$( '.tqb-tcb-intervals-item-active' ).attr( 'data-id' );\n\t\tvar $interval_item = this.$( '.tqb-tcb-intervals-item' ),\n\t\t\t$dynamic_content = TVE.inner_$( '.tqb-dynamic-content-container' ),\n\t\t\t$dynamic_content_clone = $dynamic_content.clone();\n\n\t\t$dynamic_content_clone.wrap( '<div></div>' );\n\t\t$dynamic_content_clone = $dynamic_content_clone.parent();\n\n\t\tTVE.CONST.custom_post_data.tqb_child_variation_css = JSON.stringify( $dynamic_content_clone.collect_head_css() );\n\n\t\t//Remove the active interval class\n\t\t$interval_item.removeClass( 'tqb-tcb-intervals-item-active' );\n\t\t//Add the active interval class on the clicked element\n\t\tdom.classList.add( 'tqb-tcb-intervals-item-active' );\n\n\t\t$dynamic_content.addClass( 'tcb-el-loading' );\n\n\t\tTVE.Editor_Page.save( 'true', function () {\n\t\t\t_util.state_ajax( {\n\t\t\t\tcustom: 'get_child_variation',\n\t\t\t\tchild_variation: dom.getAttribute( 'data-id' )\n\t\t\t} ).done( function ( response ) {\n\t\t\t\tif ( response ) {\n\t\t\t\t\tTVE.CONST.custom_post_data.tqb_child_variation_id = response.id;\n\n\t\t\t\t\tTVE.inner_$( '.tve_custom_style,.tve_user_custom_style' ).remove();\n\t\t\t\t\tTVE.CSS_Rule_Cache.clear();\n\t\t\t\t\tTVE.inner_$( 'head' ).append( response.parent_variation_custom_css );\n\t\t\t\t\tTVE.Editor_Page.initEditorActions();\n\n\t\t\t\t\tif ( ! response.custom_css ) {\n\t\t\t\t\t\tresponse.custom_css = {};\n\t\t\t\t\t}\n\t\t\t\t\tvar $new_html = TVE.Editor_Page.content_manager.process_saved_template( '', jQuery( response.content ), response.custom_css );\n\n\t\t\t\t\tTVE.drag.insert( $new_html, $dynamic_content, true, false );\n\n\t\t\t\t\t//We need this for old pages (that contain dynamic content) that were made in Thrive Content Builder\n\t\t\t\t\t//Because dynamic content is fetched via ajax, sometimes the rules do not come in the correct order Mobile -> Tablet -> Desktop\n\t\t\t\t\tTVE.CSS_Rule_Cache.reorderMediaRules();\n\n\t\t\t\t\t//Switch Menu To Elements After State Is Selected\n\t\t\t\t\tTVE.main.switch_menu_to( 'elements' );\n\t\t\t\t}\n\t\t\t\t$dynamic_content.removeClass( 'tcb-el-loading' );\n\t\t\t} );\n\n\t\t} );\n\t},\n\tclick_first_state: function () {\n\t\tvar $intervals_items = this.$( '.tqb-tcb-intervals-item' );\n\t\tif ( $intervals_items.length ) {\n\t\t\t$intervals_items.first().trigger( 'click' );\n\t\t}\n\t},\n\tdelete_states: function () {\n\t\tvar deleteSTatesModal = TQB.DeleteDynamicContent.get_instance( TVE.modal.get_element( 'delete-dynamic-content' ) );\n\t\tdeleteSTatesModal.open( {\n\t\t\ttop: '20%'\n\t\t} );\n\t},\n\t/**\n\t * Delete all states\n\t */\n\tdelete_all_states: function () {\n\t\t_util.state_ajax( {\n\t\t\tcustom: 'delete_dynamic_content'\n\t\t} ).done( function ( response ) {\n\t\t\tTVE.inner_$( '#tqb-editor-replace' ).find( '.tqb-dynamic-content-container' ).remove();\n\t\t\tjQuery( '#tqb-form-states' ).html( '' );\n\n\t\t\t//The child variations (dynamic content) has been deleted. Therefore there is no active state with dynamic content\n\t\t\tTVE.CONST.custom_post_data.tqb_child_variation_id = null;\n\t\t\t_util.show_hide_dynamic_content_element();\n\t\t\tTVE.Editor_Page.save( 'true' );\n\t\t} );\n\t}\n}, {} );\n//# sourceURL=workspace/tcb-bridge/assets/js/internal/states.js")}}}}}}})("workspace/tcb-bridge/assets/js/internal/main");